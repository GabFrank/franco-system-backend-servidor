type PedidoItem {
    id:ID!
    pedido: Pedido
    producto: Producto
    precioUnitarioCreacion: Float
    notaPedido: NotaPedido
    descuentoUnitarioCreacion: Float
    bonificacion: Boolean
    bonificacionDetalle: String
    observacion: String
    frio: Boolean
    estado: PedidoItemEstado
    vencimientoCreacion: Date
    creadoEn: Date
    usuarioCreacion: Usuario
    presentacionCreacion: Presentacion
    cantidadCreacion: Float
    valorTotal: Float
    notaRecepcion: NotaRecepcion
    compraItem: CompraItem
    precioUnitarioRecepcionNota: Float
    descuentoUnitarioRecepcionNota: Float
    vencimientoRecepcionNota: Date
    presentacionRecepcionNota: Presentacion
    cantidadRecepcionNota: Float
    precioUnitarioRecepcionProducto: Float
    descuentoUnitarioRecepcionProducto: Float
    vencimientoRecepcionProducto: Date
    presentacionRecepcionProducto: Presentacion
    cantidadRecepcionProducto: Float
    usuarioRecepcionNota: Usuario
    usuarioRecepcionProducto: Usuario
    obsCreacion: String
    obsRecepcionNota: String
    obsRecepcionProducto: String
    autorizacionRecepcionNota: Boolean
    autorizacionRecepcionProducto: Boolean
    autorizadoPorRecepcionNota: Usuario
    autorizadoPorRecepcionProducto: Usuario
    motivoModificacionRecepcionNota: String
    motivoModificacionRecepcionProducto: String
    cancelado: Boolean
    verificadoRecepcionNota: Boolean
    verificadoRecepcionProducto: Boolean
    precioUnitario: Float
    cantidad: Float
    presentacion: Presentacion
    motivoRechazoRecepcionNota: String
    motivoRechazoRecepcionProducto: String
}

input PedidoItemInput {
    id:ID
    pedidoId: Int
    productoId: Int
    notaPedidoId: Int
    cantidadCreacion: Float
    precioUnitarioCreacion: Float
    descuentoUnitarioCreacion: Float
    bonificacion: Boolean
    bonificacionDetalle: String
    observacion: String
    frio: Boolean
    vencimientoCreacion: String
    estado: PedidoItemEstado
    usuarioCreacionId: Int
    usuarioRecepcionNotaId: Int
    usuarioRecepcionProductoId: Int
    presentacionCreacionId: Int
    creadoEn: Date
    valorTotal: Float
    notaRecepcionId: Int
    precioUnitarioRecepcionNota: Float
    descuentoUnitarioRecepcionNota: Float
    vencimientoRecepcionNota: String
    presentacionRecepcionNotaId: Int
    cantidadRecepcionNota: Float
    precioUnitarioRecepcionProducto: Float
    descuentoUnitarioRecepcionProducto: Float
    vencimientoRecepcionProducto: String
    presentacionRecepcionProductoId: Int
    cantidadRecepcionProducto: Float
    obsCreacion: String
    obsRecepcionNota: String
    obsRecepcionProducto: String
    autorizacionRecepcionNota: Boolean
    autorizacionRecepcionProducto: Boolean
    autorizadoPorRecepcionNotaId: Int
    autorizadoPorRecepcionProductoId: Int
    motivoModificacionRecepcionNota: String
    motivoModificacionRecepcionProducto: String
    cancelado: Boolean
    verificadoRecepcionNota: Boolean
    verificadoRecepcionProducto: Boolean
    motivoRechazoRecepcionNota: String
    motivoRechazoRecepcionProducto: String
}

type PedidoItemPage {
    getTotalPages: Int
    getTotalElements: Int
    getNumberOfElements: Int
    isFirst: Boolean
    isLast: Boolean
    hasNext: Boolean
    hasPrevious: Boolean
    getContent: [PedidoItem]
    getPageable: Pageable
}

extend type Query {
    pedidoItem(id:ID!):PedidoItem
    pedidoItemPorPedidoPage(id:ID!, page:Int = 0, size:Int = 10, texto: String):PedidoItemPage!
    pedidoItemPorPedido(id:ID!):[PedidoItem]!
    countPedidoItem: Int
    pedidoItemPorPedidoIdSobrante(id:ID, page:Int = 0, size:Int = 10, texto: String): PedidoItemPage!
    pedidoItemPorNotaRecepcion(id:ID, page:Int = 0, size:Int = 10, texto: String, verificado: Boolean): PedidoItemPage!
}

extend type Mutation {
    savePedidoItem(pedidoItem:PedidoItemInput!):PedidoItem!
    deletePedidoItem(id:ID!):Boolean!
    updateNotaRecepcion(pedidoItemId: ID!, notaRecepcionId: ID): PedidoItem
    addPedidoItemToNotaRecepcion(notaRecepcion: ID, pedidoItemId: ID!): PedidoItem
    verificarRecepcionProducto(pedidoItemId: ID!, verificar: Boolean!):PedidoItem
}

enum PedidoItemEstado {
    ACTIVO,
    CANCELADO,
    DEVOLUCION,
    CONCLUIDO,
    EN_FALTA
}


