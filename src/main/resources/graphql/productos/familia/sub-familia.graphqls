type Subfamilia {
    id:ID!
    nombre: String
    descripcion: String
    familia: Familia
    subfamilia: Subfamilia
    activo: Boolean
    creadoEn: Date
    usuario: Usuario
    productos: [Producto]
    subfamiliaList: [Subfamilia]
    icono: String
    posicion: Int
}

input SubfamiliaInput {
    id: ID
    nombre: String
    descripcion: String
    activo: Boolean
    familiaId: Int
    subfamiliaId: Int
    creadoEn: Date
    usuarioId: ID
    icono: String
    posicion: Int

}

type SubfamiliaPage {
    getTotalPages: Int
    getTotalElements: Int
    getNumberOfElements: Int
    isFirst: Boolean
    isLast: Boolean
    hasNext: Boolean
    hasPrevious: Boolean
    getContent: [Subfamilia]
    getPageable: Pageable
}

extend type Query {
    subfamilia(id:ID!):Subfamilia
    subfamilias(page:Int = 0, size:Int = 10):[Subfamilia]!
    countSubfamilia: Int
    subfamiliaSearch(familiaId: ID, texto:String, page:Int, size:Int):SubfamiliaPage
    findByDescripcionSinFamilia(texto:String, page:Int, size:Int):SubfamiliaPage
}

extend type Mutation {
    saveSubfamilia(subfamilia:SubfamiliaInput!):Subfamilia!
    deleteSubfamilia(id:ID!):Boolean!
}

