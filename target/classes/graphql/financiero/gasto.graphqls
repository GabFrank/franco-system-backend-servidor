type Gasto {
    id:ID!
    caja: PdvCaja
    responsable: Funcionario
    tipoGasto: TipoGasto
    autorizadoPor: Funcionario
    observacion: String
    creadoEn: Date
    usuario: Usuario
    gastoDetalleList: [GastoDetalle]
    activo: Boolean
    finalizado: Boolean
    retiroGs: Float
    retiroRs: Float
    retiroDs: Float
    vueltoGs: Float
    vueltoRs: Float
    vueltoDs: Float
}

input GastoInput {
    id:ID
    cajaId: Int
    responsableId: Int
    tipoGastoId: Int
    autorizadoPorId: Int
    observacion: String
    creadoEn: Date
    usuarioId: Int
    retiroGs: Float
    retiroRs: Float
    retiroDs: Float
    vueltoGs: Float
    vueltoRs: Float
    vueltoDs: Float
    activo: Boolean
    finalizado: Boolean
}

extend type Query {
    gasto(id:ID!):Gasto
    gastos(page:Int = 0, size:Int = 10):[Gasto]!
    countGasto: Int
    gastosPorFecha(inicio:String, fin:String):[Gasto]
    gastosPorCajaId(id:ID!):[Gasto]
}

extend type Mutation {
    saveGasto(entity:GastoInput!, printerName: String, local: String):Gasto!
    deleteGasto(id:ID!):Boolean!
}

