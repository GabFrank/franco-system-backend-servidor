type MovimientoStock {
    id:ID!
    producto: Producto
    tipoMovimiento: TipoMovimiento
    referencia: Int
    creadoEn: Date
    usuario: Usuario
    cantidad: Float
    estado: Boolean
    proveedor: Proveedor
    sucursalId: Int
}

input MovimientoStockInput {
    id:ID!
    productoId: Int
    tipoMovimiento: TipoMovimiento
    referencia: Int
    usuarioId: Int
    cantidad: Float
    estado: Boolean
    sucursalId: Int
}

extend type Query {
    movimientoStock(id:ID!, sucId: ID):MovimientoStock
    movimientosStock(page:Int = 0, size:Int = 10, sucId: ID):[MovimientoStock]!
    countMovimientoStock: Int
    movimientoStockByFecha(inicio: String, fin: String, sucId: ID):[MovimientoStock]
    stockPorProducto(id:ID!, sucId: ID):Float
}

extend type Mutation {
    saveMovimientoStock(movimientoStock:MovimientoStockInput!):MovimientoStock!
    deleteMovimientoStock(id:ID!, sucId: ID):Boolean!
}

enum TipoMovimiento {
    COMPRA, VENTA, DEVOLUCION, DESCARTE, AJUSTE, TRANSFERENCIA, CALCULO, ENTRADA, SALIDA
}


